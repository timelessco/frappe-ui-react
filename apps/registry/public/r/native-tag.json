{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "native-tag",
  "type": "registry:ui",
  "title": "Tags",
  "description": "A tags component",
  "dependencies": [
    "react-native-css-interop",
    "react-native-svg",
    "react-native-reanimated"
  ],
  "registryDependencies": [
    "https://frappe-ui-react.tmls.dev/r/use-haptic.json",
    "https://frappe-ui-react.tmls.dev/r/use-scale-animation.json"
  ],
  "files": [
    {
      "path": "registry/native/default/ui/tag.tsx",
      "content": "// @ts-nocheck\nimport React, { PropsWithChildren, useCallback } from \"react\";\nimport {\n\tGestureResponderEvent,\n\tPressable,\n\tPressableProps,\n\tText,\n\tTextStyle,\n} from \"react-native\";\nimport { cssInterop } from \"react-native-css-interop\";\nimport Animated from \"react-native-reanimated\";\nimport Svg, { Path } from \"react-native-svg\";\n\nimport { useHaptic } from \"@/hooks/useHaptic\";\nimport { useScaleAnimation } from \"@/hooks/useScaleAnimation\";\nimport Icon from \"@/components/ui/icon\";\nimport { cx, IconProps, passProps, RenderPropType } from \"@/lib/utils\";\n\nexport type TagSize = \"sm\" | \"md\" | \"lg\";\nexport type TagVariant = \"solid\" | \"subtle\" | \"outline\" | \"ghost\";\nexport type TagTheme = \"default\";\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nexport const Close: React.FC<IconProps> = ({ fill = \"#525252\" }) => {\n\treturn (\n\t\t<Svg width=\"100%\" height=\"100%\" viewBox=\"0 0 12 12\" fill=\"none\">\n\t\t\t<Path\n\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\tclipRule=\"evenodd\"\n\t\t\t\td=\"M9.1654 3.54105C9.36066 3.34579 9.36066 3.02921 9.1654 2.83395C8.97014 2.63868 8.65356 2.63868 8.45829 2.83395L5.99988 5.29236L3.54147 2.83395C3.34621 2.63868 3.02962 2.63868 2.83436 2.83395C2.6391 3.02921 2.6391 3.34579 2.83436 3.54105L5.29278 5.99947L2.83395 8.45829C2.63868 8.65356 2.63868 8.97014 2.83395 9.1654C3.02921 9.36066 3.34579 9.36066 3.54105 9.1654L5.99988 6.70657L8.45871 9.1654C8.65397 9.36066 8.97055 9.36066 9.16582 9.1654C9.36108 8.97014 9.36108 8.65356 9.16582 8.45829L6.70699 5.99947L9.1654 3.54105Z\"\n\t\t\t\tfill={fill}\n\t\t\t/>\n\t\t</Svg>\n\t);\n};\n\ncssInterop(Close, {\n\tclassName: {\n\t\ttarget: true,\n\t\tnativeStyleToProp: { fill: true },\n\t},\n});\n\nexport interface TagProps extends PressableProps {\n\t/**\n\t * The size of the Tag component.\n\t * @default md\n\t */\n\tsize: TagSize;\n\t/**\n\t * The variant of the Tag component.\n\t * @default solid\n\t */\n\tvariant: TagVariant;\n\t/**\n\t * The Theme of the Tag component.\n\t * @default base\n\t */\n\tthemeColor: TagTheme;\n\t/**\n\t * A Prefix Element.\n\t * If added, the Tag will show a prefix Element before the Tag's text.\n\t */\n\tprefix: RenderPropType;\n\t/**\n\t * A Suffix Element.\n\t * If added, the Tag will show a suffix Element after the Tag's text.\n\t */\n\tsuffix: RenderPropType;\n\t/**\n\t * Is Tag Closable/Removable.\n\t * If yes, the Tag will show a Close Icon after the Tag's text or Suffix.\n\t */\n\tclosable: boolean;\n\t/**\n\t * The Text style of the Tag component.\n\t * @default {}\n\t */\n\ttextStyle: TextStyle;\n\t/**\n\t * When a view is marked as accessible,\n\t * it is a good practice to set an accessibilityLabel on the view,\n\t * so that people who use VoiceOver know what element they have selected.\n\t * VoiceOver will read this string when a user selects the associated element.\n\t */\n\taccessibilityLabel: string;\n\t/**\n\t * When set to true, The Tap creates a Touch Feedback\n\t * Check more -> https://docs.expo.dev/versions/latest/sdk/haptics/\n\t * @default true\n\t */\n\thapticEnabled: boolean;\n\t/**\n\t * The className of the Tag component.\n\t */\n\tclassName: string;\n}\n\nexport const Tag = (tagProps: PropsWithChildren<Partial<TagProps>>) => {\n\tconst { handlers, animatedStyle } = useScaleAnimation();\n\tconst hapticSelection = useHaptic();\n\n\tconst {\n\t\tsize = \"md\",\n\t\tvariant = \"solid\",\n\t\tthemeColor = \"default\",\n\t\tclosable = false,\n\t\tprefix,\n\t\tsuffix: suffixFromProps,\n\t\tstyle,\n\t\ttextStyle,\n\t\taccessibilityLabel,\n\t\thapticEnabled = true,\n\t\tonPress,\n\t\tchildren,\n\t\tdisabled,\n\t\tclassName,\n\t\t...otherProps\n\t} = tagProps;\n\n\tconst handlePress = useCallback((event: GestureResponderEvent) => {\n\t\tonPress && onPress(event);\n\t\thapticEnabled && hapticSelection?.();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\t/* Prefix Slot */\n\tconst _prefix = prefix ? (\n\t\t<Icon\n\t\t\tsize={tagTheme.size[size].iconSize}\n\t\t\ticon={passProps(prefix, {\n\t\t\t\tclassName:\n\t\t\t\t\ttagTheme.theme[themeColor]?.variant[variant]?.iconFill?.[\n\t\t\t\t\t\tdisabled ? \"disabled\" : \"default\"\n\t\t\t\t\t],\n\t\t\t})}\n\t\t/>\n\t) : null;\n\n\tconst suffix = suffixFromProps ? (\n\t\tsuffixFromProps\n\t) : closable ? (\n\t\t<Icon\n\t\t\tsize={tagTheme.size[size].iconSize}\n\t\t\ticon={\n\t\t\t\t<Close\n\t\t\t\t\tclassName={\n\t\t\t\t\t\ttagTheme.theme[themeColor]?.variant[variant]?.iconFill?.[\n\t\t\t\t\t\t\tdisabled ? \"disabled\" : \"default\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t}\n\t\t/>\n\t) : null;\n\t/* Suffix Slot */\n\tconst _suffix = suffix ? (\n\t\t<Icon\n\t\t\tsize={tagTheme.size[size].iconSize}\n\t\t\ticon={passProps(suffix, {\n\t\t\t\tclassName:\n\t\t\t\t\ttagTheme.theme[themeColor]?.variant[variant]?.iconFill?.[\n\t\t\t\t\t\tdisabled ? \"disabled\" : \"default\"\n\t\t\t\t\t],\n\t\t\t})}\n\t\t/>\n\t) : null;\n\n\t/**\n\t * Tag Children\n\t */\n\tconst tagChildren =\n\t\ttypeof children === \"string\" ? (\n\t\t\t<Text\n\t\t\t\tclassName={cx(\n\t\t\t\t\ttagTheme.size[size]?.text,\n\t\t\t\t\ttagTheme.theme[themeColor]?.variant[variant]?.text?.default,\n\t\t\t\t\tdisabled\n\t\t\t\t\t\t? tagTheme.theme[themeColor]?.variant[variant]?.text?.disabled\n\t\t\t\t\t\t: \"\",\n\t\t\t\t)}\n\t\t\t\tadjustsFontSizeToFit\n\t\t\t\tallowFontScaling={false}\n\t\t\t>\n\t\t\t\t{children as React.ReactNode}\n\t\t\t</Text>\n\t\t) : (\n\t\t\tchildren\n\t\t);\n\n\treturn (\n\t\t<AnimatedPressable\n\t\t\tdisabled={disabled}\n\t\t\tclassName={cx(\n\t\t\t\ttagTheme.base,\n\t\t\t\ttagTheme.size[size].default,\n\t\t\t\ttagTheme.theme[themeColor]?.variant[variant]?.container?.wrapper,\n\t\t\t\tdisabled\n\t\t\t\t\t? tagTheme.theme[themeColor]?.variant[variant]?.container?.disabled\n\t\t\t\t\t: \"\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...otherProps}\n\t\t\taccessible\n\t\t\taccessibilityRole=\"button\"\n\t\t\taccessibilityLabel={accessibilityLabel}\n\t\t\t{...handlers}\n\t\t\tonPress={handlePress}\n\t\t\tstyle={animatedStyle}\n\t\t>\n\t\t\t<>\n\t\t\t\t{_prefix}\n\t\t\t\t{tagChildren}\n\t\t\t\t{_suffix}\n\t\t\t</>\n\t\t</AnimatedPressable>\n\t);\n};\n\nexport const tagTheme = {\n\tbase: \"flex flex-row items-center justify-center gap-2\",\n\ttheme: {\n\t\tdefault: {\n\t\t\tvariant: {\n\t\t\t\tsolid: {\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\twrapper: \"bg-surface-gray-7 active:bg-surface-gray-6\",\n\t\t\t\t\t\tdisabled: \"bg-surface-gray-2\",\n\t\t\t\t\t},\n\t\t\t\t\ticonFill: {\n\t\t\t\t\t\tdefault: \"fill-ink-white\",\n\t\t\t\t\t\tdisabled: \"fill-ink-gray-4\",\n\t\t\t\t\t},\n\t\t\t\t\ttext: {\n\t\t\t\t\t\tdefault: \"text-ink-white\",\n\t\t\t\t\t\tdisabled: \"text-ink-gray-4\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tsubtle: {\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\twrapper: \"bg-surface-gray-2 active:bg-surface-gray-3\",\n\t\t\t\t\t\tdisabled: \"bg-surface-gray-2\",\n\t\t\t\t\t},\n\t\t\t\t\ticonFill: {\n\t\t\t\t\t\tdefault: \"fill-ink-gray-7\",\n\t\t\t\t\t\tdisabled: \"fill-ink-gray-4\",\n\t\t\t\t\t},\n\t\t\t\t\ttext: {\n\t\t\t\t\t\tdefault: \"text-ink-gray-7\",\n\t\t\t\t\t\tdisabled: \"text-ink-gray-4\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\toutline: {\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\twrapper:\n\t\t\t\t\t\t\t\"border border-outline-gray-2 active:border-outline-gray-3\",\n\t\t\t\t\t\tdisabled: \"border bg-surface-gray-2 border-outline-gray-2\",\n\t\t\t\t\t},\n\t\t\t\t\ticonFill: {\n\t\t\t\t\t\tdefault: \"fill-ink-gray-7\",\n\t\t\t\t\t\tdisabled: \"fill-ink-gray-4\",\n\t\t\t\t\t},\n\t\t\t\t\ttext: {\n\t\t\t\t\t\tdefault: \"text-ink-gray-7\",\n\t\t\t\t\t\tdisabled: \"text-ink-gray-4\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tghost: {\n\t\t\t\t\tcontainer: {\n\t\t\t\t\t\twrapper: \"bg-transparent active:bg-surface-gray-3\",\n\t\t\t\t\t\tdisabled: \"bg-transparent\",\n\t\t\t\t\t},\n\t\t\t\t\ticonFill: {\n\t\t\t\t\t\tdefault: \"fill-ink-gray-7\",\n\t\t\t\t\t\tdisabled: \"fill-ink-gray-4\",\n\t\t\t\t\t},\n\t\t\t\t\ttext: {\n\t\t\t\t\t\tdefault: \"text-ink-gray-7\",\n\t\t\t\t\t\tdisabled: \"text-ink-gray-4\",\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tsize: {\n\t\tsm: {\n\t\t\tdefault: \"min-h-5 w-auto min-w-5 px-1.5 rounded-[5px]\",\n\t\t\ticonSize: 12,\n\t\t\tclosable: \"w-3 ml-1\",\n\t\t\ttext: \"text-[12px] font-medium\",\n\t\t},\n\t\tmd: {\n\t\t\tdefault: \"min-h-6 w-auto min-w-6 px-1.5 rounded-md\",\n\t\t\ticonSize: 12,\n\t\t\tclosable: \"w-3 ml-1\",\n\t\t\ttext: \"text-[13px] font-medium\",\n\t\t},\n\t\tlg: {\n\t\t\tdefault: \"min-h-7 w-auto min-w-7 px-2 rounded-lg\",\n\t\t\ticonSize: 12,\n\t\t\tclosable: \"w-3 ml-1\",\n\t\t\ttext: \"text-sm font-medium\",\n\t\t},\n\t},\n};\n\nexport default Tag;\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "native": true
  },
  "categories": [
    "primitives"
  ]
}