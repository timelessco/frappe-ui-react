{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "input",
  "type": "registry:ui",
  "title": "Input",
  "description": "An input component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "https://frappe-ui-react.tmls.dev/r/utils.json"
  ],
  "files": [
    {
      "path": "registry/web/default/ui/input.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst inputVariants = cva(\n\t\"peer inline-flex w-full appearance-none items-center justify-center outline-none transition focus:text-ink-gray-7 focus:ring-2 focus:ring-focus-light-default disabled:cursor-not-allowed disabled:select-none\",\n\t{\n\t\tvariants: {\n\t\t\tsize: {\n\t\t\t\tsm: \"h-7 rounded-ef-4  px-ef-8 py-ef-6 text-ef-base font-ef-regular leading-[115%] tracking-[0.07px]\",\n\t\t\t\tmd: \"h-8 rounded-ef-4 px-ef-10 py-ef-8 text-ef-base font-ef-regular leading-[115%] tracking-[0.07px]\",\n\t\t\t\tlg: \"h-10 rounded-ef-5 px-ef-12 py-ef-11 text-ef-base font-ef-regular leading-[115%] tracking-[0.07px]\",\n\t\t\t\txl: \"h-10 rounded-ef-5 px-ef-14 py-[9.5px] text-ef-xl font-ef-regular leading-[115%] tracking-[0.18px]\",\n\t\t\t},\n\t\t\tvariant: {\n\t\t\t\tsubtle:\n\t\t\t\t\t\"bg-surface-gray-2 text-ink-gray-4 placeholder:text-ink-gray-4  focus:bg-surface-white \",\n\t\t\t\toutline:\n\t\t\t\t\t\"border border-outline-gray-2 bg-surface-white placeholder:text-ink-gray-4\",\n\t\t\t},\n\t\t\tdisabled: {\n\t\t\t\ttrue: \"bg-surface-gray-1 text-ink-gray-3 placeholder:text-ink-gray-3\",\n\t\t\t\tfalse:\n\t\t\t\t\t\"active:text-ink-gray-7 active:ring-2 active:ring-focus-light-default\",\n\t\t\t},\n\t\t\tinvalid: {\n\t\t\t\ttrue: \"\",\n\t\t\t\tfalse: \"\",\n\t\t\t},\n\t\t},\n\t\tcompoundVariants: [\n\t\t\t{\n\t\t\t\tvariant: \"subtle\",\n\t\t\t\tdisabled: false,\n\t\t\t\tclassName: \"hover:bg-surface-gray-3 \",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"outline\",\n\t\t\t\tdisabled: false,\n\t\t\t\tclassName: \"hover:shadow-[0px_1px_4px_0px_rgba(0,0,0,0.10)]\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"subtle\",\n\t\t\t\tinvalid: true,\n\t\t\t\tclassName: \"bg-surface-red-2\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tvariant: \"outline\",\n\t\t\t\tinvalid: true,\n\t\t\t\tclassName: \"border-outline-red-3\",\n\t\t\t},\n\t\t],\n\t\tdefaultVariants: {\n\t\t\tsize: \"sm\",\n\t\t\tvariant: \"subtle\",\n\t\t},\n\t},\n);\n\nconst prefixVariants = cva(\n\t\"pointer-events-none absolute inset-y-0 left-0 flex items-center justify-center bg-transparent text-ink-gray-4 placeholder:text-ink-gray-4 peer-focus:text-ink-gray-7\",\n\t{\n\t\tvariants: {\n\t\t\tsize: {\n\t\t\t\tsm: \"px-ef-8\",\n\t\t\t\tmd: \"pl-ef-10 pr-ef-8\",\n\t\t\t\tlg: \"pl-ef-12 pr-ef-8\",\n\t\t\t\txl: \"pl-ef-14 pr-ef-10\",\n\t\t\t},\n\t\t},\n\t},\n);\n\nconst suffixVariants = cva(\n\t\"pointer-events-none absolute inset-y-0 right-0 flex items-center justify-center bg-transparent text-ink-gray-4 placeholder:text-ink-gray-4 peer-focus:text-ink-gray-7\",\n\t{\n\t\tvariants: {\n\t\t\tsize: {\n\t\t\t\tsm: \"pl-ef-13 pr-ef-8\",\n\t\t\t\tmd: \"pl-ef-13 pr-ef-10\",\n\t\t\t\tlg: \"pl-ef-13 pr-ef-12\",\n\t\t\t\txl: \"pl-ef-13 pr-ef-14\",\n\t\t\t},\n\t\t},\n\t},\n);\n\nexport interface InputProps\n\textends Omit<\n\t\t\tReact.InputHTMLAttributes<HTMLInputElement>,\n\t\t\t\"disabled\" | \"prefix\" | \"size\"\n\t\t>,\n\t\tVariantProps<typeof inputVariants> {\n\tasChild?: boolean;\n\tprefix?: React.ReactNode;\n\tsuffix?: React.ReactNode;\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\ttype,\n\t\t\tsize = \"md\",\n\t\t\tvariant = \"subtle\",\n\t\t\tinvalid = false,\n\t\t\tdisabled = false,\n\t\t\tasChild = false,\n\t\t\tprefix,\n\t\t\tsuffix,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst Comp = asChild ? Slot : \"input\";\n\n\t\tconst [_, setHasPaddingCalculated] = React.useState(false);\n\t\tconst inputInlineStyles = React.useRef<Record<string, number>>({});\n\t\tconst prefixRef = React.useRef<HTMLDivElement>(null);\n\t\tconst suffixRef = React.useRef<HTMLDivElement>(null);\n\n\t\tReact.useLayoutEffect(() => {\n\t\t\tlet key = \"\";\n\n\t\t\tconst prefixElement = prefixRef.current;\n\t\t\tconst suffixElement = suffixRef.current;\n\n\t\t\tif (prefix && prefixElement) {\n\t\t\t\tkey = \"paddingLeft\";\n\n\t\t\t\tif (!key) return;\n\t\t\t\tinputInlineStyles.current[key] =\n\t\t\t\t\tprefixElement.getBoundingClientRect().width;\n\t\t\t}\n\n\t\t\tif (suffix && suffixElement) {\n\t\t\t\tkey = \"paddingRight\";\n\n\t\t\t\tif (!key) return;\n\t\t\t\tinputInlineStyles.current[key] =\n\t\t\t\t\tsuffixElement.getBoundingClientRect().width;\n\t\t\t}\n\n\t\t\tsetHasPaddingCalculated(true);\n\t\t}, [prefix, suffix]);\n\n\t\treturn (\n\t\t\t<div className=\"relative inline-flex w-full\">\n\t\t\t\t<Comp\n\t\t\t\t\ttype={type}\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\tinputVariants({\n\t\t\t\t\t\t\tsize,\n\t\t\t\t\t\t\tvariant,\n\t\t\t\t\t\t\tinvalid,\n\t\t\t\t\t\t\tdisabled,\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t}),\n\t\t\t\t\t)}\n\t\t\t\t\tdisabled={disabled ?? false}\n\t\t\t\t\tref={ref}\n\t\t\t\t\tstyle={{ ...inputInlineStyles.current }}\n\t\t\t\t\t{...props}\n\t\t\t\t/>\n\n\t\t\t\t{prefix && (\n\t\t\t\t\t<div ref={prefixRef} className={cn(prefixVariants({ size }))}>\n\t\t\t\t\t\t{prefix}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\n\t\t\t\t{suffix && (\n\t\t\t\t\t<div ref={suffixRef} className={cn(suffixVariants({ size }))}>\n\t\t\t\t\t\t{suffix}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t},\n);\n\nInput.displayName = \"Input\";\n\nexport { Input };\n",
      "type": "registry:ui"
    }
  ],
  "categories": [
    "primitives"
  ]
}