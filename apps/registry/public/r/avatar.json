{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "avatar",
  "type": "registry:ui",
  "title": "Avatar",
  "description": "An avatar component",
  "dependencies": [
    "@radix-ui/react-avatar",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "https://frappe-ui-react.tmls.dev/r/utils.json",
    "https://frappe-ui-react.tmls.dev/r/icon.json",
    "https://frappe-ui-react.tmls.dev/r/avatar-group.json"
  ],
  "files": [
    {
      "path": "registry/web/default/ui/avatar.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { Icon, type IconProps } from \"@/components/ui/icon\";\nimport { cn } from \"@/lib/utils\";\n\nimport { useAvatarGroupContext } from \"./avatar-group\";\n\ntype AvatarSize = AvatarProps[\"size\"];\n\nconst AvatarContext = React.createContext<{\n\tsize?: AvatarSize;\n}>({});\n\nexport interface AvatarProps\n\textends React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>,\n\t\tVariantProps<typeof avatarVariants> {\n\tstatus?: Status;\n}\n\nconst Avatar = React.forwardRef<\n\tReact.ElementRef<typeof AvatarPrimitive.Root>,\n\tAvatarProps\n>(\n\t(\n\t\t{ className, size: initialSize, squared: initialSquared, status, ...props },\n\t\tref,\n\t) => {\n\t\tconst groupContext = useAvatarGroupContext();\n\n\t\tconst size = initialSize ?? groupContext.size ?? \"md\";\n\t\tconst squared = initialSquared ?? groupContext.squared ?? false;\n\t\tconst value = React.useMemo(() => ({ size, squared }), [size, squared]);\n\n\t\treturn (\n\t\t\t<AvatarContext.Provider value={value}>\n\t\t\t\t<div className=\"relative\">\n\t\t\t\t\t<AvatarPrimitive.Root\n\t\t\t\t\t\tref={ref}\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\tavatarVariants({ size, squared }),\n\t\t\t\t\t\t\tgroupContext.size && ringVariants({ size }),\n\t\t\t\t\t\t\tclassName,\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t/>\n\t\t\t\t\t<StatusIndicator status={status} />\n\t\t\t\t</div>\n\t\t\t</AvatarContext.Provider>\n\t\t);\n\t},\n);\n\nconst AvatarImage = React.forwardRef<\n\tReact.ElementRef<typeof AvatarPrimitive.Image>,\n\tReact.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n\t<AvatarPrimitive.Image\n\t\tref={ref}\n\t\tclassName={cn(\"aspect-square h-full w-full\", className)}\n\t\t{...props}\n\t/>\n));\nAvatarImage.displayName = AvatarPrimitive.Image.displayName;\n\nconst AvatarFallback = React.forwardRef<\n\tReact.ElementRef<typeof AvatarPrimitive.Fallback>,\n\tReact.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => {\n\tconst { size } = React.useContext(AvatarContext);\n\n\treturn (\n\t\t<AvatarPrimitive.Fallback\n\t\t\tref={ref}\n\t\t\tclassName={cn(fallbackVariants({ size }), className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n});\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName;\n\nconst AvatarIcon = React.forwardRef<\n\tHTMLSpanElement,\n\tReact.HTMLAttributes<HTMLSpanElement>\n>(({ className, ...props }, ref) => {\n\tconst { size } = React.useContext(AvatarContext);\n\n\treturn (\n\t\t<span\n\t\t\tref={ref}\n\t\t\tclassName={cn(iconVariants({ size }), className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n});\nAvatarIcon.displayName = \"AvatarIcon\";\n\n// export { Avatar, AvatarFallback, AvatarGroupContext, AvatarIcon, AvatarImage };\nexport { Avatar, AvatarFallback, AvatarIcon, AvatarImage };\n\nconst avatarVariants = cva(\n\t\"relative flex shrink-0 items-center justify-center overflow-hidden bg-surface-gray-2 text-ink-gray-7\",\n\t{\n\t\tvariants: {\n\t\t\tsize: {\n\t\t\t\txs: \"size-4\",\n\t\t\t\tsm: \"size-5\",\n\t\t\t\tmd: \"size-6\",\n\t\t\t\tlg: \"size-7\",\n\t\t\t\txl: \"size-8\",\n\t\t\t\t\"2xl\": \"size-10\",\n\t\t\t\t\"3xl\": \"size-[46px]\",\n\t\t\t},\n\t\t\tsquared: {\n\t\t\t\ttrue: \"\",\n\t\t\t\tfalse: \"rounded-full\",\n\t\t\t},\n\t\t},\n\t\tcompoundVariants: [\n\t\t\t{\n\t\t\t\tsize: \"xs\",\n\t\t\t\tsquared: true,\n\t\t\t\tclassName: \"rounded-ef-1\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"sm\",\n\t\t\t\tsquared: true,\n\t\t\t\tclassName: \"rounded-ef-2\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"md\",\n\t\t\t\tsquared: true,\n\t\t\t\tclassName: \"rounded-ef-2\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"lg\",\n\t\t\t\tsquared: true,\n\t\t\t\tclassName: \"rounded-ef-3\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"xl\",\n\t\t\t\tsquared: true,\n\t\t\t\tclassName: \"rounded-ef-3\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"2xl\",\n\t\t\t\tsquared: true,\n\t\t\t\tclassName: \"rounded-ef-4\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"3xl\",\n\t\t\t\tsquared: true,\n\t\t\t\tclassName: \"rounded-ef-5\",\n\t\t\t},\n\t\t],\n\t\tdefaultVariants: {\n\t\t\tsize: \"md\",\n\t\t},\n\t},\n);\n\nconst fallbackVariants = cva(\"flex items-center justify-center uppercase\", {\n\tvariants: {\n\t\tsize: {\n\t\t\txs: \"text-ef-tiny font-medium leading-[115%]\",\n\t\t\tsm: \"text-ef-sm font-medium leading-[115%]\",\n\t\t\tmd: \"text-ef-base font-medium leading-[115%]\",\n\t\t\tlg: \"text-ef-base font-semibold leading-[115%]\",\n\t\t\txl: \"text-ef-lg font-semibold leading-[115%]\",\n\t\t\t\"2xl\": \"text-ef-xl font-bold leading-[115%]\",\n\t\t\t\"3xl\": \"text-ef-2xl font-bold leading-[115%]\",\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tsize: \"md\",\n\t},\n});\n\nconst iconVariants = cva(\n\t\"inline-flex items-center justify-center text-ink-gray-6\",\n\t{\n\t\tvariants: {\n\t\t\tsize: {\n\t\t\t\txs: \"text-[10px]\",\n\t\t\t\tsm: \"text-ef-xs\",\n\t\t\t\tmd: \"text-ef-base\",\n\t\t\t\tlg: \"text-ef-lg\",\n\t\t\t\txl: \"text-ef-xl\",\n\t\t\t\t\"2xl\": \"text-ef-2xl\",\n\t\t\t\t\"3xl\": \"text-[22px]\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tsize: \"md\",\n\t\t},\n\t},\n);\n\nconst statusIndicatorVariants = cva(\n\t\"absolute bottom-0 right-0 flex items-center justify-center rounded-full bg-outline-white ring-outline-white\",\n\t{\n\t\tvariants: {\n\t\t\tsize: {\n\t\t\t\txs: \"text-[4px] ring-1\",\n\t\t\t\tsm: \"text-[5px] ring-1\",\n\t\t\t\tmd: \"text-[6px] ring-1\",\n\t\t\t\tlg: \"text-[8px] ring-2\",\n\t\t\t\txl: \"text-[8px] ring-2\",\n\t\t\t\t\"2xl\": \"text-[10px] ring\",\n\t\t\t\t\"3xl\": \"text-ef-xs ring\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tsize: \"md\",\n\t\t},\n\t},\n);\n\nconst ringVariants = cva(\"ring-outline-white\", {\n\tvariants: {\n\t\tsize: {\n\t\t\txs: \"ring-1\",\n\t\t\tsm: \"ring-1\",\n\t\t\tmd: \"ring-1\",\n\t\t\tlg: \"ring-2\",\n\t\t\txl: \"ring-2\",\n\t\t\t\"2xl\": \"ring\",\n\t\t\t\"3xl\": \"ring\",\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tsize: \"md\",\n\t},\n});\n\ntype Status = \"active\" | \"away\" | \"pin\" | \"pinned\" | \"sleep\";\n\ninterface StatusIndicatorProps extends React.ComponentProps<\"div\"> {\n\tstatus?: Status;\n}\n\nconst StatusIndicator = ({\n\tstatus,\n\tclassName,\n\t...props\n}: StatusIndicatorProps) => {\n\tconst { size } = React.useContext(AvatarContext);\n\tif (!status) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div\n\t\t\taria-label=\"status indicator\"\n\t\t\tclassName={cn(statusIndicatorVariants({ size }), className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{status === \"active\" && <ActiveStatusIndicator />}\n\t\t\t{status === \"away\" && <AwayStatusIndicator />}\n\t\t\t{status === \"sleep\" && <SleepStatusIndicator />}\n\t\t\t{status === \"pinned\" && <PinnedStatusIndicator />}\n\t\t\t{status === \"pin\" && <PinStatusIndicator />}\n\t\t</div>\n\t);\n};\n\nconst ActiveStatusIndicator = ({ className, ...props }: IconProps) => (\n\t<Icon\n\t\tfill=\"none\"\n\t\tviewBox=\"0 0 4 4\"\n\t\tclassName={cn(\"text-ink-green-4\", className)}\n\t\t{...props}\n\t>\n\t\t<circle cx=\"2\" cy=\"2\" r=\"2\" fill=\"currentColor\" />\n\t</Icon>\n);\n\nconst AwayStatusIndicator = ({ className, ...props }: IconProps) => (\n\t<Icon\n\t\tfill=\"none\"\n\t\tviewBox=\"0 0 19 18\"\n\t\tclassName={cn(\"text-ink-gray-5\", className)}\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\tfill=\"currentColor\"\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M9.5 17a8 8 0 1 0 0-16 8 8 0 0 0 0 16Zm0-3a5 5 0 1 0 0-10 5 5 0 0 0 0 10Z\"\n\t\t\tclipRule=\"evenodd\"\n\t\t/>\n\t</Icon>\n);\n\nconst SleepStatusIndicator = ({ className, ...props }: IconProps) => (\n\t<Icon\n\t\tfill=\"none\"\n\t\tviewBox=\"0 0 19 18\"\n\t\tclassName={cn(\"text-ink-gray-5\", className)}\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\tfill=\"currentColor\"\n\t\t\td=\"M17.48 9.72c.01-.09-.1-.14-.16-.08a6 6 0 0 1-8.45-8.45c.05-.08 0-.18-.09-.17a8 8 0 1 0 8.7 8.7Z\"\n\t\t/>\n\t</Icon>\n);\n\nconst PinnedStatusIndicator = ({ className, ...props }: IconProps) => (\n\t<Icon\n\t\tfill=\"none\"\n\t\tviewBox=\"0 0 21 22\"\n\t\tclassName={cn(\"text-ink-gray-5\", className)}\n\t\t{...props}\n\t>\n\t\t<path\n\t\t\tfill=\"currentColor\"\n\t\t\td=\"m17.63 8.76-4.89-4.89c-.53-.53-.8-.8-1.08-.85a.95.95 0 0 0-.7.14C7.68 5.3 9.18 7.82 4.15 8.83c-1.84.37-2.22 1.13-.78 2.56l2.5 2.5-2.22 2.22a1 1 0 0 0 0 1.42l.38.38a1 1 0 0 0 1.41 0l2.22-2.22 2.44 2.43c1.43 1.44 2.2 1.06 2.56-.77 1-5.04 3.53-3.54 5.67-6.8a.9.9 0 0 0 .14-.71c-.06-.28-.32-.55-.85-1.08Z\"\n\t\t/>\n\t</Icon>\n);\n\nconst PinStatusIndicator = ({ className, ...props }: IconProps) => (\n\t<Icon\n\t\tfill=\"none\"\n\t\tviewBox=\"0 0 21 22\"\n\t\tclassName={cn(\"text-ink-gray-5\", className)}\n\t\t{...props}\n\t>\n\t\t<path fill=\"#3BBDE5\" d=\"M1.5 11a9 9 0 1 1 18 0 9 9 0 0 1-18 0Z\" />\n\t\t<path\n\t\t\tfill=\"#fff\"\n\t\t\td=\"m15.62 9.39-3.5-3.51c-.4-.38-.58-.58-.78-.62a.68.68 0 0 0-.51.1C8.48 6.9 9.56 8.72 5.93 9.44c-1.3.26-1.58.81-.55 1.84l1.8 1.8-1.46 1.46a.91.91 0 1 0 1.29 1.29l1.46-1.46 1.75 1.75c1.03 1.03 1.58.76 1.84-.56.72-3.62 2.54-2.54 4.08-4.89.1-.15.13-.33.1-.5-.04-.2-.24-.4-.62-.78Z\"\n\t\t/>\n\t</Icon>\n);\n",
      "type": "registry:ui"
    }
  ],
  "categories": [
    "primitives"
  ]
}