{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "title": "Button",
  "description": "A button component",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "registryDependencies": [
    "https://frappe-ui-react.tmls.dev/r/utils.json",
    "https://frappe-ui-react.tmls.dev/r/icon.json",
    "https://frappe-ui-react.tmls.dev/r/button-group.json"
  ],
  "files": [
    {
      "path": "registry/web/default/ui/button.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\n\nimport { type IconProps } from \"@/components/ui/icon\";\nimport { cn, handleIconElement } from \"@/lib/utils\";\n\nimport { useButtonGroupContext } from \"./button-group\";\n\nexport interface ButtonProps\n\textends Omit<React.ButtonHTMLAttributes<HTMLButtonElement>, \"prefix\">,\n\t\tVariantProps<typeof buttonVariants> {\n\tasChild?: boolean;\n\ticonOnly?: React.ComponentType<IconProps> | React.ReactElement<IconProps>;\n\tprefix?: React.ComponentType<IconProps> | React.ReactElement<IconProps>;\n\tsuffix?: React.ComponentType<IconProps> | React.ReactElement<IconProps>;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t(\n\t\t{\n\t\t\tclassName,\n\t\t\tvariant: initialVariant,\n\t\t\tsize: initialSize,\n\t\t\tasChild = false,\n\t\t\tprefix,\n\t\t\tsuffix,\n\t\t\ticonOnly,\n\t\t\tchildren,\n\t\t\t...props\n\t\t},\n\t\tref,\n\t) => {\n\t\tconst Comp = asChild ? Slot : \"button\";\n\t\tconst groupContext = useButtonGroupContext();\n\n\t\tconst size = initialSize ?? groupContext.size ?? \"md\";\n\t\tconst variant = initialVariant ?? groupContext.variant ?? \"solid\";\n\n\t\tconst prefixContent = handleIconElement(prefix, iconVariants({ size }));\n\t\tconst suffixContent = handleIconElement(suffix, iconVariants({ size }));\n\t\tconst iconOnlyContent = handleIconElement(iconOnly, iconVariants({ size }));\n\n\t\treturn (\n\t\t\t<Comp\n\t\t\t\tclassName={cn(\n\t\t\t\t\tbuttonVariants({\n\t\t\t\t\t\tvariant,\n\t\t\t\t\t\tsize,\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t\tisIconOnly: Boolean(iconOnly),\n\t\t\t\t\t}),\n\t\t\t\t)}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{asChild ? (\n\t\t\t\t\tchildren\n\t\t\t\t) : (\n\t\t\t\t\t<ButtonContent\n\t\t\t\t\t\tprefixContent={prefixContent}\n\t\t\t\t\t\tsuffixContent={suffixContent}\n\t\t\t\t\t\ticonOnlyContent={iconOnlyContent}\n\t\t\t\t\t>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</ButtonContent>\n\t\t\t\t)}\n\t\t\t</Comp>\n\t\t);\n\t},\n);\nButton.displayName = \"Button\";\n\ninterface ButtonContentProps {\n\tchildren: React.ReactNode;\n\ticonOnlyContent: React.ReactNode;\n\tprefixContent: React.ReactNode;\n\tsuffixContent: React.ReactNode;\n}\n\nconst ButtonContent = ({\n\tchildren,\n\ticonOnlyContent,\n\tprefixContent,\n\tsuffixContent,\n}: ButtonContentProps) => {\n\tif (iconOnlyContent) {\n\t\treturn <>{iconOnlyContent}</>;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{prefixContent}\n\t\t\t<span>{children}</span>\n\t\t\t{suffixContent}\n\t\t</>\n\t);\n};\n\nexport { Button, buttonVariants };\n\nconst buttonVariants = cva(\n\t\"relative inline-flex translate-y-0 select-none appearance-none items-center justify-center whitespace-nowrap align-middle outline-none transition-all will-change-transform hover:-translate-y-px active:translate-y-0 disabled:cursor-not-allowed\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tsolid:\n\t\t\t\t\t\"bg-surface-gray-7 text-ink-white hover:bg-surface-gray-6 focus-visible:bg-surface-gray-7 focus-visible:ring-2 focus-visible:ring-focus-light-default active:bg-surface-gray-5 disabled:bg-surface-gray-2 disabled:text-ink-gray-4\",\n\t\t\t\tsubtle:\n\t\t\t\t\t\"bg-surface-gray-2 text-ink-gray-7 hover:bg-surface-gray-3 focus-visible:bg-surface-gray-2 focus-visible:ring-2 focus-visible:ring-focus-light-default active:bg-surface-gray-4 disabled:bg-surface-gray-2 disabled:text-ink-gray-4\",\n\t\t\t\toutline:\n\t\t\t\t\t\"border border-outline-gray-2 text-ink-gray-7 hover:border-outline-gray-3 focus-visible:bg-surface-gray-2 focus-visible:ring-2 focus-visible:ring-focus-light-default active:border-outline-gray-4 active:bg-surface-gray-4 disabled:bg-surface-gray-2 disabled:text-ink-gray-4\",\n\t\t\t\tghost:\n\t\t\t\t\t\"bg-transparent text-ink-gray-7 hover:bg-surface-gray-3 focus-visible:bg-surface-gray-2 focus-visible:ring-2 focus-visible:ring-focus-light-default active:bg-surface-gray-4 disabled:bg-surface-gray-2 disabled:text-ink-gray-4\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tsm: \"min-h-7 w-auto min-w-7 gap-ef-8 rounded-ef-4 text-ef-base font-ef-regular leading-[115%] tracking-[0.07px]\",\n\t\t\t\tmd: \"min-h-8 w-auto min-w-8 gap-ef-8 rounded-ef-4 text-ef-base font-ef-medium leading-[115%] tracking-[0.07px]\",\n\t\t\t\tlg: \"min-h-10 w-auto min-w-10 gap-ef-8 rounded-ef-5 text-ef-lg font-ef-medium leading-[115%] tracking-[0.08px]\",\n\t\t\t\txl: \"min-h-[46px] w-auto min-w-[46px] gap-ef-8 rounded-ef-6 text-ef-xl font-ef-medium leading-[115%] tracking-[0.18px]\",\n\t\t\t\t\"2xl\":\n\t\t\t\t\t\"min-h-[52px] w-auto min-w-[52px] gap-ef-8 rounded-ef-7 text-ef-2xl font-ef-medium leading-[115%] tracking-[0.1px]\",\n\t\t\t},\n\t\t\tisIconOnly: {\n\t\t\t\ttrue: \"\",\n\t\t\t\tfalse: \"\",\n\t\t\t},\n\t\t},\n\t\tcompoundVariants: [\n\t\t\t{\n\t\t\t\tsize: \"sm\",\n\t\t\t\tisIconOnly: true,\n\t\t\t\tclassName: \"p-ef-6\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"sm\",\n\t\t\t\tisIconOnly: false,\n\t\t\t\tclassName: \"px-ef-8 py-ef-6\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"md\",\n\t\t\t\tisIconOnly: true,\n\t\t\t\tclassName: \"p-ef-7\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"md\",\n\t\t\t\tisIconOnly: false,\n\t\t\t\tclassName: \"px-ef-10 py-ef-7\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"lg\",\n\t\t\t\tisIconOnly: true,\n\t\t\t\tclassName: \"p-ef-8\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"lg\",\n\t\t\t\tisIconOnly: false,\n\t\t\t\tclassName: \"px-ef-12 py-ef-10\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"xl\",\n\t\t\t\tisIconOnly: true,\n\t\t\t\tclassName: \"p-ef-9\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"xl\",\n\t\t\t\tisIconOnly: false,\n\t\t\t\tclassName: \"px-ef-14 py-ef-12\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"2xl\",\n\t\t\t\tisIconOnly: true,\n\t\t\t\tclassName: \"p-ef-10\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tsize: \"2xl\",\n\t\t\t\tisIconOnly: false,\n\t\t\t\tclassName: \"px-ef-16 py-ef-13\",\n\t\t\t},\n\t\t],\n\t\tdefaultVariants: {\n\t\t\tvariant: \"solid\",\n\t\t\tsize: \"md\",\n\t\t},\n\t},\n);\n\nconst iconVariants = cva(\"\", {\n\tvariants: {\n\t\tsize: {\n\t\t\tsm: \"text-ef-lg\",\n\t\t\tmd: \"text-ef-xl\",\n\t\t\tlg: \"text-ef-2xl\",\n\t\t\txl: \"text-ef-3xl\",\n\t\t\t\"2xl\": \"text-ef-3xl\",\n\t\t},\n\t},\n\tdefaultVariants: {\n\t\tsize: \"md\",\n\t},\n});\n",
      "type": "registry:ui"
    }
  ],
  "categories": [
    "primitives"
  ]
}